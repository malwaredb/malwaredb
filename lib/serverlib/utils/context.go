package utils

import (
	"sync"
	"time"
)

var _globalServerContext *ServerContext = nil

type ServerContext struct {
	ConfigFile *ServerConfigFile
	GlobalWaitGroup *sync.WaitGroup
	FileTypePlugins []FileTypeHandler
	StartTime time.Time
}

func GetGlobalContext() *ServerContext {
	if _globalServerContext == nil {
		emptyPlugins := make([]FileTypeHandler, 0)
		_globalServerContext = &ServerContext{nil, &sync.WaitGroup{},emptyPlugins, time.Now()}
	}
	return _globalServerContext
}

func (cntx* ServerContext) SetConfig(cfg *ServerConfigFile) {
	cntx.ConfigFile = cfg
}

func (cntx* ServerContext) TimeRunning() time.Duration {
	return time.Since(cntx.StartTime)
}